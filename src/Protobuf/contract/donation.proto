syntax = "proto3";

import "aelf/core.proto";
import "aelf/options.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "Protobuf/reference/acs12.proto";

option csharp_namespace = "AElf.Contracts.DonationApp";

service DonationDApp {
    option (aelf.csharp_state) = "AElf.Contracts.DonationApp.DonationAppState";
    option (aelf.base) = "Protobuf/reference/acs12.proto";
    
    rpc IsContractInitialized (google.protobuf.Empty) returns (google.protobuf.BoolValue) {
        option (aelf.is_view) = true;
    }
    
    rpc Initialize (google.protobuf.Empty) returns (google.protobuf.StringValue) {
    }
    
    rpc CreateCampaign (CampaignInput) returns (google.protobuf.StringValue) {
    }
    
    rpc Donate (DonationInput) returns (google.protobuf.Empty) {
    }
    
    rpc GetCampaign (google.protobuf.StringValue) returns (Campaign) {
        option (aelf.is_view) = true;
    }
    
    rpc GetCampaignsData (google.protobuf.Empty) returns (CampaignList) {
        option (aelf.is_view) = true;
    }
    
    rpc GetUsersCampaigns (aelf.Address) returns (CampaignList) {
        option (aelf.is_view) = true;
    }
    
    rpc EditCampaign (EditCampaignInput) returns (google.protobuf.Empty) {
    }
    
    rpc DeleteCampaign (google.protobuf.StringValue) returns (google.protobuf.Empty) {
    }
    
    rpc SendReward (RewardInput) returns (google.protobuf.Empty) {
    }
    
    rpc GetUserDetails (aelf.Address) returns (UserDetails) {
        option (aelf.is_view) = true;
    }
}

message CampaignInput {
    string title = 1;
    string description = 2;
    string imageUrl = 3;
    string type = 4;
    int64 goalAmount = 5;
    int64 duration = 6;
}

message DonationInput {
    string campaignId = 1;
    int64 amount = 2;
}

message EditCampaignInput {
    string campaignId = 1;
    string newTitle = 2;
    string newDescription = 3;
    string newImageUrl = 4;
    string newType = 5;
    int64 newGoalAmount = 6;
    bool newIsActive = 7;
}

message RewardInput {
    string campaignId = 1;
    aelf.Address recipient = 2;
    int64 amount = 3;
    string message = 4;
}

message Donation {
    aelf.Address donor = 1;
    int64 amount = 2;
    int64 timestamp = 3;
}

message Campaign {
    string title = 1;
    string description = 2;
    string imageUrl = 3;
    string type = 4;
    int64 goalAmount = 5;
    int64 currentAmount = 6;
    aelf.Address creator = 7;
    int64 startTime = 8;
    int64 endTime = 9;
    repeated Donation donators = 10;
    bool isActive = 11;
}

message CampaignList {
    repeated Campaign value = 1;
}

message UserDetails {
    aelf.Address walletAddress = 1;
    repeated Campaign campaigns = 2;
    repeated Campaign donatedCampaigns = 3;
    int64 totalRaisedAmount = 4;
}

message UserInfo {
    repeated string campaigns = 1;
    repeated string donated_campaigns = 2;
    int64 total_raised_amount = 3;
}

// Events
message CampaignCreatedEvent {
    option (aelf.is_event) = true;
    string campaignId = 1;
    string title = 2;
    aelf.Address creator = 3;
    int64 goalAmount = 4;
}

message DonationMadeEvent {
    option (aelf.is_event) = true;
    string campaignId = 1;
    aelf.Address donor = 2;
    int64 amount = 3;
}

message RewardSentEvent {
    option (aelf.is_event) = true;
    string campaignId = 1;
    aelf.Address recipient = 2;
    int64 amount = 3;
    string message = 4;
} 